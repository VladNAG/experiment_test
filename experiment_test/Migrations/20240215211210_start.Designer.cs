// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using experiment_test.Data;

#nullable disable

namespace experiment_test.Migrations
{
    [DbContext(typeof(DataProviderDbContent))]
    [Migration("20240215211210_start")]
    partial class Start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("experiment_test.Data.Entityes.Devise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FirstRequst")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devises");
                });

            modelBuilder.Entity("experiment_test.Data.Entityes.Experiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartExp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Experiments");
                });

            modelBuilder.Entity("experiment_test.Data.Entityes.ExperimentOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExperimentId")
                        .HasColumnType("int");

                    b.Property<int>("IdExperiment")
                        .HasColumnType("int");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExperimentId");

                    b.ToTable("ExperimentOption");
                });

            modelBuilder.Entity("experiment_test.Data.Entityes.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeviseId")
                        .HasColumnType("int");

                    b.Property<int?>("ExperimentId")
                        .HasColumnType("int");

                    b.Property<int>("IdDevise")
                        .HasColumnType("int");

                    b.Property<int>("IdExperiment")
                        .HasColumnType("int");

                    b.Property<string>("result")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviseId");

                    b.HasIndex("ExperimentId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("experiment_test.Data.Entityes.ExperimentOption", b =>
                {
                    b.HasOne("experiment_test.Data.Entityes.Experiment", "Experiment")
                        .WithMany("ExperimentOptions")
                        .HasForeignKey("ExperimentId");

                    b.Navigation("Experiment");
                });

            modelBuilder.Entity("experiment_test.Data.Entityes.Result", b =>
                {
                    b.HasOne("experiment_test.Data.Entityes.Devise", "Devise")
                        .WithMany()
                        .HasForeignKey("DeviseId");

                    b.HasOne("experiment_test.Data.Entityes.Experiment", "Experiment")
                        .WithMany()
                        .HasForeignKey("ExperimentId");

                    b.Navigation("Devise");

                    b.Navigation("Experiment");
                });

            modelBuilder.Entity("experiment_test.Data.Entityes.Experiment", b =>
                {
                    b.Navigation("ExperimentOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
